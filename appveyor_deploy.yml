clone_depth: 1
version: '{build}'
image: Visual Studio 2019
test: off
skip_non_tags: true
configuration: Release

environment:
  matrix:
    - job_name: osu-game
    - job_name: catch-ruleset
      job_depends_on: osu-game

matrix:
  fast_finish: true

for:
  -
    matrix:
      only:
        - job_name: osu-game
    dotnet_csproj:
      patch: true
      file: 'osu.Game\osu.Game.csproj' # Use wildcard when it's able to exclude Xamarin projects
      version: $(APPVEYOR_REPO_TAG_NAME)
    before_build:
      - ps: dotnet --info # Useful when version mismatch between CI and local
      - ps: nuget restore -verbosity quiet # Only nuget.exe knows both new (.NET Core) and old (Xamarin) projects
    build:
      project: build\Desktop.proj # Skipping Xamarin Release that's slow and covered by fastlane
      parallel: true
      verbosity: minimal
      publish_nuget: true
  -
    matrix:
      only:
        - job_name: catch-ruleset
    dotnet_csproj:
      patch: true
      file: 'osu.Game.Rulesets.Catch\osu.Game.Rulesets.Catch.csproj' # Use wildcard when it's able to exclude Xamarin projects
      version: $(APPVEYOR_REPO_TAG_NAME)
    before_build:
      - ps: dotnet remove osu.Game.Rulesets.Catch\osu.Game.Rulesets.Catch.csproj reference osu.Game\osu.Game.csproj
      - ps: dotnet add osu.Game.Rulesets.Catch\osu.Game.Rulesets.Catch.csproj package ppy.osu.Game -v $env:APPVEYOR_REPO_TAG_NAME
    build:
      project: osu.Game.Rulesets.Catch\osu.Game.Rulesets.Catch.csproj # Skipping Xamarin Release that's slow and covered by fastlane
      parallel: true
      verbosity: minimal
      publish_nuget: true

deploy:
  - provider: Environment
    name: nuget
